services:
  openshield:
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      - ENV=production
      - PORT="3005"
      - DEMO_MODE=true
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
    ports:
      - "8081:3005"
    links:
      - redis
      - postgres
      - vigilllm
    volumes:
      - ./demo_config.yaml:/app/config.yaml
    depends_on:
      postgres:
        condition: service_healthy

  vigilllm:
    build:
      context: ../services/vigilllm
      dockerfile: Dockerfile
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "5000:5000"
    volumes:
      - vigil_data:/app/data

  rule:
    build:
      context: ../services/rule
      dockerfile: Dockerfile
    environment:
      - HF_HOME=/app/hf_cache
      - VIGILLLM_API_URL=http://vigilllm:5000
    volumes:
      - ./volumes/rule:/app/cache
    ports:
      - "8000:8000"
    depends_on:
      - vigilllm

  cache:
    build:
      context: ../services/cache
      dockerfile: Dockerfile
    environment:
      - HF_HOME=/app/hf_cache
    volumes:
      - ./cache_config.yaml:/app/config.yaml
      - ./volumes/cache:/app/hf_cache
      - ./volumes/gptcache_data:/app/gptcache_data
    ports:
      - "8082:8080"

  redis:
    image: "valkey/valkey:8.0.1-alpine"
    restart: always
    ports:
      - "6381:6379"

  postgres:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_PASSWORD: openshield
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - 8085:8080

volumes:
  vigil_data: